#!/bin/bash

set -e

cleanup() {
    echo "Shutting down..."
    pkill -P $$

    # Stop Docker containers
    if [ -z "$SKIP_SETUP" ]; then
        make stop_local
    fi

    exit 0
}

trap cleanup SIGINT SIGTERM

# Check if .env.local exists
if [ ! -f "packages/nextjs/.env.local" ]; then
    echo "packages/nextjs/.env.local file not found."
    read -p "Would you like to pull environment variables from Vercel? (y/n) " answer

    if [ "$answer" = "y" ] || [ "$answer" = "Y" ]; then
        echo "Pulling environment variables from Vercel..."
        cd packages/nextjs && npx vercel link && npx vercel env pull --environment=development && cd ../..
    else
        echo "Please set up your .env.local file by copying packages/nextjs/.env.local.sample to packages/nextjs/.env.local and filling in the required values"
        exit 1
    fi
elif [ -f "packages/nextjs/.vercel/project.json" ]; then
    echo "Found existing Vercel project configuration. Pulling latest environment variables..."
    cd packages/nextjs && npx vercel env pull --environment=development && cd ../..
fi

if [ -z "$SKIP_SETUP" ]; then
    LOCAL_DETACHED=true make local
    npm install
    npm run db:migrate
fi

# Add the local CA to the Node.js environment
export NODE_EXTRA_CA_CERTS="$(mkcert -CAROOT)/rootCA.pem"

# Build the React package
cd packages/react && npm run build && cd ../..

npx dotenv -e packages/nextjs/.env.development.local -e packages/nextjs/.env.local -- npx heroku local -f Procfile.dev
